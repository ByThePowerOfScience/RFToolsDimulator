buildscript {
	repositories {
		gradlePluginPortal()
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '2.3-SNAPSHOT', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6+'
	}
}
project.ext.pythonFile = project.file('venv/bin/python3')
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

archivesBaseName = 'example' //TODO
group = 'com.example' //TODO
version = 'version' //TODO

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
  sourceCompatibility = targetCompatibility = '1.8'
}

runClient {
  args "--username=Dev" //, "--mixin.config=mixins.modid.json"
  jvmArgs "-Dforge.logging.console.level=debug", "-Dmixin.debug.verbose=true", "-Dmixin.debug.export=true", "-Dmixin.hotSwap=true"
}

minecraft {
  version = "1.12.2-14.23.5.2847"
  runDir = "run"
  
  mappings = "stable_39"
  
  replace "@VERSION@", project.version
}

//	sourceSets.main {
//		resources { srcDir 'src/generated/resources' }
//	}

repositories {
//    maven {
//        name = "Su5ed LegacyDev Fork"
//        url = "https://su5ed.jfrog.io/artifactory/maven/"
//    }
	mavenLocal()
	// maven {
	// 	name = "CurseMaven"
	// 	url = "https://cursemaven.com"
	// }
	// maven {
	// 	name = "JEI Maven"
	// 	url = "https://dvs1.progwml6.com/files/maven"
	// }
	// maven {
	// 	name = "BlameJared"
	// 	url = "https://maven.blamejared.com/"
	// }
	// maven {
	// 	name = "CoFH Maven"
	// 	url = "https://maven.covers1624.net"
	// }
	mavenCentral()
}

dependencies {
  implementation 'org.spongepowered:mixin:0.8.5'
  // testImplementation     "org.junit.jupiter:junit-jupiter-api:5.2.0"
  // testCompile("org.junit.jupiter:junit-jupiter-api:5.2.0")
  // testCompile("org.junit.platform:junit-platform-launcher:1.1.0")
  // testRuntime("org.junit.jupiter:junit-jupiter-engine:5.2.0")
}

// task runTests(type: JavaExec, group: 'buildruns') {
// 	dependsOn(build, generateTestZS)
// 	def modproject = project(":mod")
// 	def coremodproject = project(":coremod")
// 	classpath = modproject.sourceSets.main.output.classesDirs + modproject.sourceSets.main.compileClasspath + modproject.sourceSets.test.output.classesDirs + modproject.sourceSets.test.runtimeClasspath + coremodproject.sourceSets.main.output.classesDirs + coremodproject.sourceSets.main.compileClasspath + coremodproject.sourceSets.test.output.classesDirs + coremodproject.sourceSets.test.runtimeClasspath
// 	main = 'GenerateTestZS'
// 	setArgsString(rootProject.projectDir.toPath().resolve("Test.zs").toString())
// }

processResources {
  // this will ensure that this task is redone when the versions change.
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version
  
  // replace stuff in mcmod.info, nothing else
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    
    // replace version and mcversion
    expand 'version': project.version, 'mcversion': project.minecraft.version
  }
  
  // copy everything else except the mcmod.info
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }

  //	rename '(.+_at.cfg)', 'META-INF/$1'
}

// jar {
// 	manifest {
// 		attributes (
// 				"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
// 				"MixinConfigs": 'mixins.dj2addons.init.json'
// 		)
// 	}
// }
jar.finalizedBy('reobfJar')

mixin {
  //noinspection GroovyAssignabilityCheck
  add sourceSets.main, "mixins.${archivesBaseName}.refmap.json"
}

idea {
  module {
    inheritOutputDirs = true
    downloadSources = false
    downloadJavadoc = true
  }
}
